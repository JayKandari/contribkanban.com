<?php

/**
 * @file
 * Module file for contribkanban_boards.
 */

use Drupal\contribkanban_boards\FieldHelper;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function contribkanban_boards_theme($existing, $type, $theme, $path) {
  return [
    'board' => [
      'render element' => 'elements',
    ],
    'board_list' => [
      'render element' => 'elements',
    ],
    'field__board__lists' => [
      'base hook' => 'field',
    ],
    'board_form' => [
      'render element' => 'form',
    ],
    'board_list_form' => [
      'render element' => 'form',
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function contribkanban_boards_node_board_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  /** @var \Drupal\contribkanban_boards\Entity\NodeBoard $board */
  $board = $entity;
  $build['#attached']['library'][] = 'contribkanban_boards/app';
  $build['#attached']['drupalSettings']['board'] = [
    'nids' => FieldHelper::stringAsJson($board->get('nids')),
    'uuid' => $board->uuid(),
  ];
  $build['output'] = [
    '#markup' => '<div id="NodeBoard" style="position: relative;height: 100%;"></div>',
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function contribkanban_boards_preprocess_board(&$variables) {
  $variables['#attached']['library'][] = 'contribkanban_boards/app';
  $variables['#attached']['drupalSettings']['board'] = [];

  /** @var \Drupal\contribkanban_boards\Entity\BoardInterface $board */
  $board = $variables['elements']['#board'];
  /** @var \Drupal\contribkanban_boards\Entity\BoardListInterface $board_list */
  foreach ($board->get('lists')->referencedEntities() as $board_list) {
    $attributes['title'] = $board_list->label();
    $attributes['projects'] = FieldHelper::stringAsJson($board_list->getProjects());
    $attributes['category'] = FieldHelper::stringAsJson($board_list->getCategory());
    $attributes['component'] = FieldHelper::stringAsJson($board_list->getComponent());
    $attributes['parent'] = FieldHelper::stringAsJson($board_list->getParentIssue());
    $attributes['priority'] = FieldHelper::stringAsJson($board_list->getPriority());
    $attributes['statuses'] = FieldHelper::stringAsJson($board_list->getStatuses());
    $attributes['tag'] = FieldHelper::stringAsJson($board_list->getTags());
    $attributes['version'] = FieldHelper::stringAsJson($board_list->getVersion());
    $variables['#attached']['drupalSettings']['board'][] = $attributes;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function contribkanban_boards_preprocess_board_list(&$variables) {
  /** @var \Drupal\contribkanban_boards\Entity\BoardListInterface $board_list */
  $board_list = $variables['elements']['#board_list'];
  $variables['title'] = ['#markup' => $board_list->label()];
  $attributes =& $variables['attributes'];
  $attributes['data-drupal-selector'] = 'board-list';
  $attributes['data-projects'] = FieldHelper::stringAsJson($board_list->getProjects());
  $attributes['data-category'] = FieldHelper::stringAsJson($board_list->getCategory());
  $attributes['data-component'] = FieldHelper::stringAsJson($board_list->getComponent());
  $attributes['data-parent'] = FieldHelper::stringAsJson($board_list->getParentIssue());
  $attributes['data-priority'] = FieldHelper::stringAsJson($board_list->getPriority());
  $attributes['data-statuses'] = FieldHelper::stringAsJson($board_list->getStatuses());
  $attributes['data-tag'] = FieldHelper::stringAsJson($board_list->getTags());
  $attributes['data-version'] = FieldHelper::stringAsJson($board_list->getVersion());
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function contribkanban_boards_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  if ($entity_form['#entity_type'] == 'board_list') {
    $entity_form['#theme'] = ['board_list_form'];
    $entity_form['#attached']['library'][] = 'contribkanban_boards/form';
  }
}

/**
 * Implements hook_js_settings_alter().
 */
function contribkanban_boards_js_settings_alter(array &$settings, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  $user = \Drupal::currentUser();
  $settings['user']['email'] = $user->getEmail();
  $settings['user']['gravatar'] = md5(strtolower(trim($user->getEmail())));
}

/**
 * Implements hook_page_attachments().
 */
function contribkanban_boards_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'contribkanban_boards/app';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function contribkanban_boards_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['actions']['forgot'] = [
    '#type' => 'link',
    '#title' => t('Forgot password?'),
    '#url' => \Drupal\Core\Url::fromRoute('user.pass'),
    '#attributes' => [
      'class' => [
        'button',
        'is-link'
      ],
    ],
  ];
  $form['actions']['signup'] = [
    '#type' => 'link',
    '#title' => t('Create an Account'),
    '#url' => \Drupal\Core\Url::fromRoute('user.register'),
    '#attributes' => [
      'class' => [
        'button',
        'is-white',
      ],
    ],
  ];
}
